<!DOCTYPE html>
<html>
    <body>

    <h1>Soldier's Shooting Practice</h1>
    ---------------------------------------------------------
    <p>Click the button 20 times as fast as you can</p>
    ---------------------------------------------------------

    <p id="status"></p>
    <p id="highscore"></p>

    <p>Time starts when you click the button.</p>
    <button type="button" onclick="reset()">Reset</button>
    <br><br>
    ---------------------------------------------------------
    <br><br>

    <button type="button" onclick="clickAdd()"> <h1>Click Me</h1></button>

    <h1><p id="clicks"></p></h1>
    ---------------------------------------------------------
    <p id="result"></p>
    <p id="highPrompt"></p>
    
    <p id="validName"></p>

        <script>
        document.getElementById('highscore').style.visibility = 'hidden';

        var clicks = 0;
        var start, end;
        var time;
        var arrayNum;

        var highscore = '{"highscore":[' +
            '{"score": "Alex", "time": "999"},' +
            '{"score": "Alex", "time": "999"},' +
            '{"score": "Alex", "time": "999"}]}';

        var data = JSON.parse(highscore);

        
        //Display all highscores
        data.highscore.forEach(function(item)
                                   {
                                   document.getElementById("highscore").innerHTML += item.score + ": " + item.time + " seconds" + "<br>";
                                   });

        document.getElementById('nameLabel').style.visibility = 'hidden';
        document.getElementById('attLabel').style.visibility = 'hidden';
        document.getElementById('scoreLabel').style.visibility = 'hidden';
        document.getElementById('keyValue').style.visibility = 'hidden';
        document.getElementById('valueText').style.visibility = 'hidden';
        document.getElementById('attributeText').style.visibility = 'hidden';
        document.getElementById('buttons').style.visibility = 'hidden';
        document.getElementById("clicks").innerHTML = clicks;

        //Add clicks and calculate time
        function clickAdd()
        {
            clicks += 1;
            document.getElementById("clicks").innerHTML = clicks;

            //Get time when clicks start
            if (clicks == 1)
            {
                start = new Date().getTime();
            }

            //Get time when clicks reaches 20 and calculate total time
            if (clicks == 20) 
            {
                end = new Date().getTime();
                time = (end - start)/1000;
                document.getElementById("result").innerHTML = "Time: " + time + " seconds";
                checkHigh();
            }   
        }

        //Resets the number of clicks and hide elements
        function reset()
        {
            document.getElementById("highPrompt").innerHTML = "";
            document.getElementById("validName").innerHTML = "";
            document.getElementById('nameLabel').style.visibility = 'hidden';
            document.getElementById('attLabel').style.visibility = 'hidden';
            document.getElementById('scoreLabel').style.visibility = 'hidden';
            document.getElementById('keyValue').style.visibility = 'hidden';
            document.getElementById('valueText').style.visibility = 'hidden';
            document.getElementById('attributeText').style.visibility = 'hidden';
            document.getElementById('buttons').style.visibility = 'hidden';
            clicks = 0;
            document.getElementById("clicks").innerHTML = clicks;
            document.getElementById("result").innerHTML = "";
        }

        //Check for highscore and change the time
        function checkHigh()
        {
            var time1 = data.highscore[0].time;
            var time2 = data.highscore[1].time;
            var time3 = data.highscore[2].time; 
            var name1 = data.highscore[0].score;
            var name2 = data.highscore[1].score;
            var name3 = data.highscore[2].score; 

            if(time < time1)
            {
                document.getElementById("highPrompt").innerHTML = "You got the new highscore!";
                document.getElementById('nameLabel').style.visibility = 'visible';
                document.getElementById('attLabel').style.visibility = 'visible';
                document.getElementById('scoreLabel').style.visibility = 'visible';
                document.getElementById('keyValue').style.visibility = 'visible';
                document.getElementById('valueText').style.visibility = 'visible';
                document.getElementById('attributeText').style.visibility = 'visible';
                document.getElementById('buttons').style.visibility = 'visible';
                data.highscore[0].time = time;
                data.highscore[0].score = name;

                if (time1 < time2)
                {
                    data.highscore[1].time = time1;
                    data.highscore[1].score = name1;
                }
                if (time2 < time3)
                {
                    data.highscore[2].time = time2;
                    data.highscore[2].score = name2;
                }
                arrayNum = 0;
            }
            else if(time < data.highscore[1].time)
            {
                document.getElementById('nameLabel').style.visibility = 'visible';
                document.getElementById('attLabel').style.visibility = 'visible';
                document.getElementById('scoreLabel').style.visibility = 'visible';
                document.getElementById("highPrompt").innerHTML = "You got the new highscore!";
                document.getElementById('keyValue').style.visibility = 'visible';
                document.getElementById('valueText').style.visibility = 'visible';
                document.getElementById('attributeText').style.visibility = 'visible';
                document.getElementById('buttons').style.visibility = 'visible';
                data.highscore[1].time = time;
                data.highscore[1].score = name1;

                if (time2 < time3)
                {
                    data.highscore[2].time = time2;
                    data.highscore[2].score = name2;
                }
                arrayNum = 1;
            }
            else if(time < data.highscore[2].time)
            {
                document.getElementById('nameLabel').style.visibility = 'visible';
                document.getElementById('attLabel').style.visibility = 'visible';
                document.getElementById('scoreLabel').style.visibility = 'visible';
                document.getElementById("highPrompt").innerHTML = "You got the new highscore!";
                document.getElementById('keyValue').style.visibility = 'visible';
                document.getElementById('valueText').style.visibility = 'visible';
                document.getElementById('attributeText').style.visibility = 'visible';
                document.getElementById('buttons').style.visibility = 'visible';
                data.highscore[2].time = time;
                data.highscore[2].score = name2;
                arrayNum = 2;
            }
        }

        //Validate name and change highscore
        function nameSubmit()
        {
            var name; 
            name = document.getElementById("name").value;
            data.highscore[arrayNum].score = name;

            if (name != "")
            {
                var text = data.highscore[arrayNum].score + ": " + data.highscore[arrayNum].time + " seconds. Click Reset to play again!" ;
                document.getElementById("validName").innerHTML = text;
                document.getElementById("highscore").innerHTML = "";
                data.highscore.forEach(function(item)
                    {
                    document.getElementById("highscore").innerHTML += item.score + ": " + item.time + " seconds" + "<br>";
                    });
            }
            else
            {
                var text = "Name is not valid. Please try again.";
                document.getElementById("validName").innerHTML = text;
            }
        }
        </script>
    </body>
        <head>
        <script src="https://sdk.amazonaws.com/js/aws-sdk-2.2.18.min.js"></script>
        <title>Soldier Shooting</title>
        <meta charset="UTF-8">
            </head>
    <body id="bod">
        <p id="status"></p>
        <div id="output"></div>
        <script>
            var roleArn = 'arn:aws:iam::111950665511:role/cistest'; //from AWS IAM
            var appId = '256130938159288'; //from facebook
            // This is called with the results from from FB.getLoginStatus().
            function statusChangeCallback(response) {
                console.log('statusChangeCallback');
                console.log(response);
                // The response object is returned with a status field that lets the
                // app know the current login status of the person.
                // Full docs on the response object can be found in the documentation
                // for FB.getLoginStatus().
                if (response.status === 'connected') {
                    // Logged into your app and Facebook.
                    //testAPI();
                    AWS.config.credentials = new AWS.WebIdentityCredentials({ //WIF
                                                                            RoleArn: roleArn,
                                                                            ProviderId: 'graph.facebook.com',
                                                                            WebIdentityToken: response.authResponse.accessToken
                                                                            });
                                                                            testQuery();//will write to output div after page loads
                } else if (response.status === 'not_authorized') {
                    // The person is logged into Facebook, but not your app.
                    document.getElementById('status').innerHTML = 'Please log ' +
                    'into this app.';
                } else {
                    // The person is not logged into Facebook, so we're not sure if
                    // they are logged into this app or not.
                    document.getElementById('status').innerHTML = 'Please log ' +
                    'into Facebook.';
                }
            }
        
        // This function is called when someone finishes with the Login
        // Button.  See the onlogin handler attached to it in the sample
        // code below.
        function checkLoginState() {
            FB.getLoginStatus(function(response) {
                              statusChangeCallback(response);
                              });
        }
        
        window.fbAsyncInit = function() {
            FB.init({
                    appId      : appId,
                    cookie     : true,  // enable cookies to allow the server to access
                    // the session
                    xfbml      : true,  // parse social plugins on this page
                    version    : 'v2.8' // use graph api version 2.8
                    });
                    
                    // Now that we've initialized the JavaScript SDK, we call
                    // FB.getLoginStatus().  This function gets the state of the
                    // person visiting this page and can return one of three states to
                    // the callback you provide.  They can be:
                    //
                    // 1. Logged into your app ('connected')
                    // 2. Logged into Facebook, but not your app ('not_authorized')
                    // 3. Not logged into Facebook and can't tell if they are logged into
                    //    your app or not.
                    //
                    // These three cases are handled in the callback function.
                    
                    FB.getLoginStatus(function(response) {
                                      statusChangeCallback(response);
                                      });
                                      
        };
        
        // Load the SDK asynchronously
        (function(d, s, id) {
         var js, fjs = d.getElementsByTagName(s)[0];
         if (d.getElementById(id)) return;
         js = d.createElement(s); js.id = id;
         js.src = "//connect.facebook.net/en_US/sdk.js";
         fjs.parentNode.insertBefore(js, fjs);
         }(document, 'script', 'facebook-jssdk'));
         
         // Here we run a very simple test of the Graph API after login is
         // successful.  See statusChangeCallback() for when this call is made.
         function testAPI() {
             console.log('Welcome!  Fetching your information.... ');
             FB.api('/me', function(response) {
                    console.log('Successful login for: ' + response.name);
                    document.getElementById('status').innerHTML =
                    'Thanks for logging in, ' + response.name + '!';
                    });
         }
        
        function testQuery() {
            dynamodb = new AWS.DynamoDB({ region: 'us-west-2' });
            docClient = new AWS.DynamoDB.DocumentClient({ service: dynamodb });
            
            var params = {
                TableName:'supportInfo',
                KeyConditionExpression:'nameID = :vvv',
                ExpressionAttributeValues: {
                    ':vvv':'clickHighscore'
                }
            }; //end params, now use them below
            
            docClient.query(params, function(err, resultData){
                            if(err){
                            document.getElementById("output").innerHTML =JSON.stringify(err, null, 2);
                            }else {
                            var increment = 0;
                            resultData.Items.forEach(function(item) {
                             increment++;
                             console.log("increment = " + increment);//check for increase
                             var x = item.heroInfo;

                             console.log("outputting: x = " + x);
                             var newDiv = document.createElement("div");//make a new div, dynamically
                             var idValueForNewDiv = "div" + increment;
                            console.log("id for div is now " + idValueForNewDiv);
                             newDiv.setAttribute("id", idValueForNewDiv); //set id for this new item, so we can talk to it later
                            
                            var newp = document.createElement("p");//put a p in the div
                             var newPMessage = x; //what's your message?
                             //console.log("message will be " + newPMessage);
                             var nodeWithMessage = document.createTextNode(newPMessage);//encode in a text node, for printing
                             
                             //newp.appendChild(nodeWithMessage);//put the new text element in the new paragraph
                             
                             var anchor = document.createElement("a");  // create a new anchor
                             var attributeForAnchor = document.createAttribute("href");        // Create a "href" attribute
                             attributeForAnchor.value = "https://s3.amazonaws.com/ahchoi/Microproject/Unit+6+-+Link.html?value1=Alex&value2=score&value3=9.99"; // Set the value of the href attribute
                             anchor.setAttributeNode(attributeForAnchor);// Add the href attribute to <a>
                             anchor.appendChild(nodeWithMessage);
                             newp.appendChild(anchor);
                             
                             //var finalDiv = document.getElementById(idValueForNewDiv);//set up the newly created div
                             newDiv.appendChild(newp);//append the paragraph to the new div
                             
                            var element = document.getElementById("bod");//attach the div to the body
                             element.appendChild(newDiv);
                             });
                            }
                            })
        };
        </script>
        
        <!--
         Below we include the Login Button social plugin. This button uses
         the JavaScript SDK to present a graphical Login button that triggers
         the FB.login() function when clicked.
         -->
        
        <fb:login-button scope="public_profile,email" onlogin="checkLoginState();">
            </fb:login-button>
            
            <div id="status">
            </div>
            
            </body>
</html> 
